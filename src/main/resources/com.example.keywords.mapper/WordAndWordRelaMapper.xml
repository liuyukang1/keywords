<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.keywords.dao.WordAndWordRelaMapper">
  <resultMap id="BaseResultMap" type="com.example.keywords.model.WordAndWordRela">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="base_word_id" jdbcType="INTEGER" property="baseWordId" />
    <result column="extend_word_id" jdbcType="INTEGER" property="extendWordId" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
  </resultMap>
  <resultMap id="WordsResultMap" type="com.example.keywords.model.CommonThesaurus">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="common_words" jdbcType="VARCHAR" property="commonWords" />
    <result column="handle_weight" jdbcType="DOUBLE" property="handleWeight" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="words_Column_List">
    ID, common_words, handle_weight, is_delete
  </sql>
  <sql id="Base_Column_List">
    ID, base_word_id, extend_word_id, weight
  </sql>
  <select id="relatedWords" parameterType="java.lang.Integer" resultMap="WordsResultMap">
    SELECT
    <include refid="words_Column_List" />
    FROM
	common_thesaurus
    WHERE
	common_thesaurus.ID IN (
    SELECT
	wwr.extend_word_id
    FROM
	( SELECT * FROM word_and_word_rela WHERE base_word_id in ( SELECT id FROM common_thesaurus
	<where>
      <if test="keywords != null">
        common_thesaurus.common_words IN
        <foreach collection="keywords" item="item" index="index"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>)
    ORDER BY word_and_word_rela.weight
    LIMIT 5 ) wwr)
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from word_and_word_rela
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from word_and_word_rela
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.keywords.model.WordAndWordRela">
    insert into word_and_word_rela (ID, base_word_id, extend_word_id, 
      weight
      )
    values (#{id,jdbcType=INTEGER}, #{baseWordId,jdbcType=INTEGER}, #{extendWordId,jdbcType=INTEGER}, 
      #{weight,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.keywords.model.WordAndWordRela">
    insert into word_and_word_rela
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="baseWordId != null">
        base_word_id,
      </if>
      <if test="extendWordId != null">
        extend_word_id,
      </if>
      <if test="weight != null">
        weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="baseWordId != null">
        #{baseWordId,jdbcType=INTEGER},
      </if>
      <if test="extendWordId != null">
        #{extendWordId,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.keywords.model.WordAndWordRela">
    update word_and_word_rela
    <set>
      <if test="baseWordId != null">
        base_word_id = #{baseWordId,jdbcType=INTEGER},
      </if>
      <if test="extendWordId != null">
        extend_word_id = #{extendWordId,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.keywords.model.WordAndWordRela">
    update word_and_word_rela
    set base_word_id = #{baseWordId,jdbcType=INTEGER},
      extend_word_id = #{extendWordId,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>